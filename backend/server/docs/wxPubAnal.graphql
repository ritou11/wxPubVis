# Entry points

type Query {
  post(input: PostInput!): Post
  profile(input: ProfileInput!): Profile
  postList(input: PostListInput!): [Post!]
  totalPost(input: PostCountInput!): Int
  profileList(input: ProfileListInput!): [Profile!]
  totalProfile: Int
  postVis(input: PostVisInput!): PostVis
  profileVis(input: ProfileVisInput!): ProfileVis
  searchPost(input: SearchInput!): [Post!]
  searchProfile(input: SearchInput!): [Profile!]
}

# Inputs
input SearchInput {
  sId: ID
  name: String
}

input PostInput {
  pId: ID!
}

input ProfileInput {
  msgBiz: ID!
}

input PostListInput {
  msgBiz: ID
  skip: Int
  count: Int
  sort: String
}

input PostCountInput {
  msgBiz: ID
}

input ProfileListInput {
  skip: Int
  count: Int
  sort: String
}

input PostVisInput {
  pId: ID!
  vis: String!
}

input ProfileVisInput {
  msgBiz: ID!
  vis: String!
}

# Objects
type Post {
  pId: ID!
  wechatId: String
  title: String
  digest: String
  msgBiz: String
  msgIdx: String
  msgMid: String
  publishAt: String # TODO
  createdAt: String # TODO
  updatedAt: String # TODO
  sourceUrl: String
  cover: String
  content: String
  likeNum: Int
  readNum: Int
  link: String
  profile: Profile
}

type Profile {
  pId: ID!
  wechatId: ID
  msgBiz: String
  headimg: String
  title: String
  postsAllCount: Int
  postsDataCount: Int
  createdAt: String # TODO: time
  updatedAt: String # TODO: time
}

type PostVis {
  img: String
}

type ProfileVis {
  img: String
}
